{<<"app">>,<<"algae">>}.
{<<"build_tools">>,[<<"mix">>]}.
{<<"description">>,<<"Bootstrapped algebraic data types for Elixir">>}.
{<<"elixir">>,<<"~> 1.5">>}.
{<<"files">>,
 [<<"lib/algae.ex">>,<<"lib/algae/either.ex">>,<<"lib/algae/free.ex">>,
  <<"lib/algae/free/applicative.ex">>,<<"lib/algae/free/apply.ex">>,
  <<"lib/algae/free/chain.ex">>,<<"lib/algae/free/functor.ex">>,
  <<"lib/algae/free/generator.ex">>,<<"lib/algae/free/monad.ex">>,
  <<"lib/algae/free/ord.ex">>,<<"lib/algae/free/setoid.ex">>,
  <<"lib/algae/id.ex">>,<<"lib/algae/id/applicative.ex">>,
  <<"lib/algae/id/apply.ex">>,<<"lib/algae/id/chain.ex">>,
  <<"lib/algae/id/comonad.ex">>,<<"lib/algae/id/extend.ex">>,
  <<"lib/algae/id/foldable.ex">>,<<"lib/algae/id/functor.ex">>,
  <<"lib/algae/id/generator.ex">>,<<"lib/algae/id/monad.ex">>,
  <<"lib/algae/id/monoid.ex">>,<<"lib/algae/id/ord.ex">>,
  <<"lib/algae/id/semigroup.ex">>,<<"lib/algae/id/setoid.ex">>,
  <<"lib/algae/id/traversable.ex">>,<<"lib/algae/internal.ex">>,
  <<"lib/algae/internal/needs_explicit_default_error.ex">>,
  <<"lib/algae/maybe.ex">>,<<"lib/algae/reader.ex">>,
  <<"lib/algae/reader/applicative.ex">>,<<"lib/algae/reader/apply.ex">>,
  <<"lib/algae/reader/chain.ex">>,<<"lib/algae/reader/functor.ex">>,
  <<"lib/algae/reader/generator.ex">>,<<"lib/algae/reader/monad.ex">>,
  <<"lib/algae/state.ex">>,<<"lib/algae/state/applicative.ex">>,
  <<"lib/algae/state/apply.ex">>,<<"lib/algae/state/chain.ex">>,
  <<"lib/algae/state/functor.ex">>,<<"lib/algae/state/generator.ex">>,
  <<"lib/algae/state/monad.ex">>,<<"lib/algae/tree/binary_search.ex">>,
  <<"lib/algae/tree/binary_search/applicative.ex">>,
  <<"lib/algae/tree/binary_search/apply.ex">>,
  <<"lib/algae/tree/binary_search/chain.ex">>,
  <<"lib/algae/tree/binary_search/extend.ex">>,
  <<"lib/algae/tree/binary_search/foldable.ex">>,
  <<"lib/algae/tree/binary_search/functor.ex">>,
  <<"lib/algae/tree/binary_search/generator.ex">>,
  <<"lib/algae/tree/binary_search/monad.ex">>,
  <<"lib/algae/tree/binary_search/monoid.ex">>,
  <<"lib/algae/tree/binary_search/ord.ex">>,
  <<"lib/algae/tree/binary_search/semigroup.ex">>,
  <<"lib/algae/tree/binary_search/setoid.ex">>,<<"lib/algae/tree/rose.ex">>,
  <<"lib/algae/tree/rose/applicative.ex">>,<<"lib/algae/tree/rose/apply.ex">>,
  <<"lib/algae/tree/rose/chain.ex">>,<<"lib/algae/tree/rose/foldable.ex">>,
  <<"lib/algae/tree/rose/functor.ex">>,<<"lib/algae/tree/rose/generator.ex">>,
  <<"lib/algae/tree/rose/monad.ex">>,<<"lib/algae/writer.ex">>,
  <<"lib/algae/writer/applicative.ex">>,<<"lib/algae/writer/apply.ex">>,
  <<"lib/algae/writer/chain.ex">>,<<"lib/algae/writer/functor.ex">>,
  <<"lib/algae/writer/generator.ex">>,<<"lib/algae/writer/monad.ex">>,
  <<"mix.exs">>,<<"README.md">>,<<"LICENSE">>]}.
{<<"licenses">>,[<<"MIT">>]}.
{<<"links">>,[{<<"GitHub">>,<<"https://github.com/expede/algae">>}]}.
{<<"maintainers">>,[<<"Brooklyn Zelenka">>]}.
{<<"name">>,<<"algae">>}.
{<<"requirements">>,
 [[{<<"app">>,<<"quark">>},
   {<<"name">>,<<"quark">>},
   {<<"optional">>,false},
   {<<"requirement">>,<<"~> 2.3">>}],
  [{<<"app">>,<<"type_class">>},
   {<<"name">>,<<"type_class">>},
   {<<"optional">>,false},
   {<<"requirement">>,<<"~> 1.2">>}],
  [{<<"app">>,<<"witchcraft">>},
   {<<"name">>,<<"witchcraft">>},
   {<<"optional">>,false},
   {<<"requirement">>,<<"~> 1.0">>}]]}.
{<<"version">>,<<"1.1.0">>}.
